module dual_port_sram (
    input wire clk,           
    input wire rst,            
    
    input wire [9:0] sw,       
    input wire we_a_btn,       
    input wire we_b_btn,      

    output reg [7:0] led       
);

   
    reg [25:0] clk_div = 0;
    reg slow_clk = 0;

   
    reg [7:0] mem [0:1023];    
    reg [7:0] dout_a = 0;
    reg [7:0] dout_b = 0;

    wire [9:0] addr_a = sw[9:0];
    wire [9:0] addr_b = sw[9:0];
    wire [7:0] din_a = sw[7:0];
    wire [7:0] din_b = sw[7:0];

    
    always @(posedge clk or posedge rst) begin
        if (rst) begin
            clk_div <= 0;
            slow_clk <= 0;
        end else begin
            if (clk_div == 26'd49999999) begin
                clk_div <= 0;
                slow_clk <= ~slow_clk;
            end else begin
                clk_div <= clk_div + 1;
            end
        end
    end

   
    always @(posedge slow_clk) begin
        
        if (we_a_btn)
            mem[addr_a] <= din_a;
        dout_a <= mem[addr_a];

       
        if (we_b_btn)
            mem[addr_b] <= din_b;
        dout_b <= mem[addr_b];
    end

    
    always @(posedge slow_clk) begin
        led <= dout_a;
    end

endmodule
